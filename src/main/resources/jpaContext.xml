<!--namespaces for context-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd">

<!--    tells Spring we want to configure the app using annotations -->
    <context:annotation-config/>
    <context:component-scan base-package="com.pluralsight"/>

<!--    configures spring data jpa-->
    <jpa:repositories base-package="com.pluralsight.repository"/>

    <!--tells spring to use the persistence context annotation-->
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="punit"/>
<!--        will need to be linked up-->
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
            </bean>
        </property>

<!--        specific vendor properties for Hibernate-->
        <property name="jpaPropertyMap">
            <map>
<!--            pick a dialect for hibernate-->
                <entry key="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
                <entry key="hibernate.hbm2ddl.auto" value="create"/>
                <entry key="hibernate.format_sql" value="true"/>
            </map>
        </property>
    </bean>

<!--    expects a ref to inject, which is the entityManagerFactory bean above-->
<!--    makes a transaction manager available to use-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

<!--    expects a reference to a transaction manager, like above-->
<!--    allows configuration of transactions-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

<!--    link up with the datasource property in entityManagerFactory-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
<!--        kind of datasource-->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
<!--        where it is located-->
        <property name="url" value="jdbc:mysql://localhost:3306/fitnessTracker?autoReconnect=true"/>
        <property name="username" value="root"/>
        <property name="password" value="password" />
    </bean>

</beans>